pipeline {
    agent any
    environment {
        AWS_DEFAULT_REGION = 'us-east-1'
        ECR_REPO = 'travelease'
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build & Push Images') {
            matrix {
                axes {
                    axis {
                        name 'SERVICE'
                        values 'booking', 'payment', 'user', 'frontend'
                    }
                }
                stages {
                    stage('Build') {
                        steps {
                            dir("services/${SERVICE}") {
                                script {
                                    dockerImage = docker.build("${ECR_REPO}-${SERVICE}:${env.BUILD_NUMBER}")
                                }
                            }
                        }
                    }
                    stage('Push') {
                        steps {
                            script {
                                sh "aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin <account-id>.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
                                sh "docker tag ${ECR_REPO}-${SERVICE}:${env.BUILD_NUMBER} <account-id>.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/${ECR_REPO}-${SERVICE}:${env.BUILD_NUMBER}"
                                sh "docker push <account-id>.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/${ECR_REPO}-${SERVICE}:${env.BUILD_NUMBER}"
                            }
                        }
                    }
                }
            }
        }
        stage('Terraform Apply') {
            steps {
                dir('infra/terraform') {
                    sh 'terraform init'
                    sh 'terraform apply -auto-approve'
                }
            }
        }
        stage('ECS Deploy') {
            steps {
                // Example ECS deployment script
                dir('infra/terraform') {
                    sh 'terraform init'
                    sh 'terraform plan'
                    sh 'terraform apply -auto-approve'
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
